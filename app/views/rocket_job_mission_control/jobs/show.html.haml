.row
  .col-md-14.col-md-offset-1.job-status
    #job
      .lead= @job.class.name

      .job-state.inline-block
        .left State
        .right{ class: @job.state.to_s }
          = @job.state
      - if sub_state = @job['sub_state']
        .job-state.inline-block
          .left Batch
          .right{ class: 'running' }
            = sub_state

      .btn-toolbar.job-actions.pull-right
        - if @job.respond_to?(:input) && @job.input.failed.count > 0
          .btn-group
            = link_to('Show Exceptions', exceptions_job_path(@job), class: 'btn btn-default')

        - if @job.scheduled?
          .btn-group
            = job_action_link('Run', rocket_job_mission_control.run_now_job_path(@job), :patch)

        .btn-group
          - valid_events = @job.aasm.events.collect{ |e| e.name }

          - if valid_events.include?(:pause)
            = job_action_link('Pause', rocket_job_mission_control.pause_job_path(@job), :patch)

          - if valid_events.include?(:resume)
            = job_action_link('Resume', rocket_job_mission_control.resume_job_path(@job), :patch)

          - if valid_events.include?(:retry)
            = job_action_link('Retry', rocket_job_mission_control.retry_job_path(@job), :patch)

        .btn-group
          - if valid_events.include?(:fail)
            = job_action_link('Fail', rocket_job_mission_control.fail_job_path(@job), :patch)

          - if valid_events.include?(:abort)
            = job_action_link('Abort', rocket_job_mission_control.abort_job_path(@job), :patch)

          = job_action_link('Destroy', rocket_job_mission_control.job_path(@job), :delete)

        - unless @job.completed? || @job.aborted?
          .btn-group
            = link_to "Edit", edit_job_path(@job), class: "btn btn-default"

      .col-md-12
        = render partial: 'status', locals: { job: @job }
